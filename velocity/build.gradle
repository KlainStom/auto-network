plugins {
    id 'java'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow'
}

repositories {
    mavenCentral()
    maven { url = 'https://nexus.velocitypowered.com/repository/maven-public/'}
    maven { url = 'https://repo.viaversion.com/everything/' }
}

dependencies {
    implementation project(':auto-network-common')
    compileOnly 'com.viaversion:viaversion-velocity:4.0.1'
    compileOnly 'io.netty:netty-all:4.1.68.Final'
    compileOnly 'com.velocitypowered:velocity-api:3.0.0'
    annotationProcessor 'com.velocitypowered:velocity-api:3.0.0'
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

shadowJar {
    dependencies {
        include(project(':auto-network-common'))
    }
}

tasks.build.dependsOn tasks.shadowJar
